timestamp: 2013-02-26T10:06:54.222586
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512),
    bio TEXT,
    photo CHAR(512),
    gender CHAR(512)
);
success!
timestamp: 2013-02-26T10:06:54.365532
CREATE TABLE auth_group(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role CHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-26T10:06:54.473951
CREATE TABLE auth_membership(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2013-02-26T10:06:54.583227
CREATE TABLE auth_permission(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name CHAR(512),
    table_name CHAR(512),
    record_id INTEGER
);
success!
timestamp: 2013-02-26T10:06:54.691934
CREATE TABLE auth_event(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    time_stamp TIMESTAMP,
    client_ip CHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin CHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-26T10:06:54.799724
CREATE TABLE auth_cas(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service CHAR(512),
    ticket CHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2013-02-26T10:06:54.914908
CREATE TABLE cliente(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(512) NOT NULL UNIQUE,
    email CHAR(512) UNIQUE
);
success!
timestamp: 2013-02-26T10:06:55.031200
CREATE TABLE servidor(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(512)
);
success!
timestamp: 2013-02-26T10:06:55.156577
CREATE TABLE distro(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(512),
    img CHAR(512),
    imagem CHAR(512)
);
success!
timestamp: 2013-02-26T10:06:55.273894
CREATE TABLE hosts(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_cliente INTEGER REFERENCES cliente (id) ON DELETE CASCADE,
    id_servidor INTEGER REFERENCES servidor (id) ON DELETE CASCADE,
    id_distro INTEGER REFERENCES distro (id) ON DELETE CASCADE,
    nome CHAR(512),
    ip_chegada CHAR(512),
    porta_ssh CHAR(512),
    gateway CHAR(512),
    vpn CHAR(512),
    servicos TEXT,
    if1 CHAR(512),
    ip1 CHAR(512),
    masc1 CHAR(512),
    obs1 CHAR(512),
    if2 CHAR(512),
    ip2 CHAR(512),
    masc2 CHAR(512),
    obs2 CHAR(512),
    if3 CHAR(512),
    ip3 CHAR(512),
    masc3 CHAR(512),
    obs3 CHAR(512),
    if4 CHAR(512),
    ip4 CHAR(512),
    masc4 CHAR(512),
    obs4 CHAR(512),
    rotas TEXT,
    obs_gerais TEXT
);
success!
timestamp: 2013-02-26T10:06:55.393690
CREATE TABLE interface(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_hosts INTEGER REFERENCES hosts (id) ON DELETE CASCADE,
    nome CHAR(512),
    ip CHAR(512)
);
success!
timestamp: 2013-02-26T10:48:10.805385
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512),
    bio TEXT,
    photo VARCHAR(512),
    gender VARCHAR(512)
);
success!
timestamp: 2013-02-26T10:48:10.949973
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-26T10:48:10.985831
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2013-02-26T10:48:11.023396
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2013-02-26T10:48:11.116104
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-26T10:48:11.166876
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2013-02-26T10:48:11.219555
CREATE TABLE cliente(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512) NOT NULL UNIQUE,
    email VARCHAR(512) UNIQUE
);
success!
timestamp: 2013-02-26T10:48:11.269018
CREATE TABLE servidor(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512)
);
success!
timestamp: 2013-02-26T10:48:11.315821
CREATE TABLE distro(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512),
    img VARCHAR(512),
    imagem VARCHAR(512)
);
success!
timestamp: 2013-02-26T10:48:11.359505
CREATE TABLE hosts(
    id SERIAL PRIMARY KEY,
    id_cliente INTEGER REFERENCES cliente (id) ON DELETE CASCADE,
    id_servidor INTEGER REFERENCES servidor (id) ON DELETE CASCADE,
    id_distro INTEGER REFERENCES distro (id) ON DELETE CASCADE,
    nome VARCHAR(512),
    ip_chegada VARCHAR(512),
    porta_ssh VARCHAR(512),
    gateway VARCHAR(512),
    vpn VARCHAR(512),
    servicos TEXT,
    if1 VARCHAR(512),
    ip1 VARCHAR(512),
    masc1 VARCHAR(512),
    obs1 VARCHAR(512),
    if2 VARCHAR(512),
    ip2 VARCHAR(512),
    masc2 VARCHAR(512),
    obs2 VARCHAR(512),
    if3 VARCHAR(512),
    ip3 VARCHAR(512),
    masc3 VARCHAR(512),
    obs3 VARCHAR(512),
    if4 VARCHAR(512),
    ip4 VARCHAR(512),
    masc4 VARCHAR(512),
    obs4 VARCHAR(512),
    rotas TEXT,
    obs_gerais TEXT
);
success!
timestamp: 2013-02-26T10:48:11.405016
CREATE TABLE interface(
    id SERIAL PRIMARY KEY,
    id_hosts INTEGER REFERENCES hosts (id) ON DELETE CASCADE,
    nome VARCHAR(512),
    ip VARCHAR(512)
);
success!
timestamp: 2013-02-26T10:54:08.937049
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512),
    bio TEXT,
    photo CHAR(512),
    gender CHAR(512)
);
success!
timestamp: 2013-02-26T10:54:09.199045
CREATE TABLE auth_group(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role CHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-26T10:54:09.317942
CREATE TABLE auth_membership(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2013-02-26T10:54:09.450210
CREATE TABLE auth_permission(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name CHAR(512),
    table_name CHAR(512),
    record_id INTEGER
);
success!
timestamp: 2013-02-26T10:54:09.585060
CREATE TABLE auth_event(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    time_stamp TIMESTAMP,
    client_ip CHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin CHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-26T10:54:09.701704
CREATE TABLE auth_cas(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service CHAR(512),
    ticket CHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2013-02-26T10:54:09.824747
CREATE TABLE cliente(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(512) NOT NULL UNIQUE,
    email CHAR(512) UNIQUE
);
success!
timestamp: 2013-02-26T10:54:09.975148
CREATE TABLE servidor(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(512)
);
success!
timestamp: 2013-02-26T10:54:10.125507
CREATE TABLE distro(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(512),
    img CHAR(512),
    imagem CHAR(512)
);
success!
timestamp: 2013-02-26T10:54:10.264362
CREATE TABLE hosts(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_cliente INTEGER REFERENCES cliente (id) ON DELETE CASCADE,
    id_servidor INTEGER REFERENCES servidor (id) ON DELETE CASCADE,
    id_distro INTEGER REFERENCES distro (id) ON DELETE CASCADE,
    nome CHAR(512),
    ip_chegada CHAR(512),
    porta_ssh CHAR(512),
    gateway CHAR(512),
    vpn CHAR(512),
    servicos TEXT,
    if1 CHAR(512),
    ip1 CHAR(512),
    masc1 CHAR(512),
    obs1 CHAR(512),
    if2 CHAR(512),
    ip2 CHAR(512),
    masc2 CHAR(512),
    obs2 CHAR(512),
    if3 CHAR(512),
    ip3 CHAR(512),
    masc3 CHAR(512),
    obs3 CHAR(512),
    if4 CHAR(512),
    ip4 CHAR(512),
    masc4 CHAR(512),
    obs4 CHAR(512),
    rotas TEXT,
    obs_gerais TEXT
);
success!
timestamp: 2013-02-26T10:54:10.419429
CREATE TABLE interface(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_hosts INTEGER REFERENCES hosts (id) ON DELETE CASCADE,
    nome CHAR(512),
    ip CHAR(512)
);
success!
timestamp: 2013-02-27T10:36:16.331090
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512)
);
success!
timestamp: 2013-02-27T10:36:16.486614
CREATE TABLE auth_group(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role CHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-27T10:36:16.603462
CREATE TABLE auth_membership(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2013-02-27T10:36:16.737296
CREATE TABLE auth_permission(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name CHAR(512),
    table_name CHAR(512),
    record_id INTEGER
);
success!
timestamp: 2013-02-27T10:36:16.880692
CREATE TABLE auth_event(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    time_stamp TIMESTAMP,
    client_ip CHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin CHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-27T10:36:17.021249
CREATE TABLE auth_cas(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service CHAR(512),
    ticket CHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2013-02-27T10:36:17.170955
CREATE TABLE cliente(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(512) NOT NULL UNIQUE,
    email CHAR(512)
);
success!
timestamp: 2013-02-27T10:36:17.320815
CREATE TABLE servidor(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(512) NOT NULL
);
success!
timestamp: 2013-02-27T10:36:17.454669
CREATE TABLE distro(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(512) NOT NULL,
    img CHAR(512) NOT NULL,
    imagem CHAR(512) NOT NULL
);
success!
timestamp: 2013-02-27T10:36:17.602801
CREATE TABLE hosts(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_cliente INTEGER REFERENCES cliente (id) ON DELETE CASCADE,
    id_servidor INTEGER REFERENCES servidor (id) ON DELETE CASCADE,
    id_distro INTEGER REFERENCES distro (id) ON DELETE CASCADE,
    nome CHAR(512) NOT NULL,
    ip_chegada CHAR(512) NOT NULL,
    porta_ssh CHAR(512) NOT NULL,
    gateway CHAR(512) NOT NULL,
    vpn CHAR(512),
    servicos TEXT,
    if1 CHAR(512),
    ip1 CHAR(512),
    masc1 CHAR(512),
    obs1 CHAR(512),
    if2 CHAR(512),
    ip2 CHAR(512),
    masc2 CHAR(512),
    obs2 CHAR(512),
    if3 CHAR(512),
    ip3 CHAR(512),
    masc3 CHAR(512),
    obs3 CHAR(512),
    if4 CHAR(512),
    ip4 CHAR(512),
    masc4 CHAR(512),
    obs4 CHAR(512),
    rotas TEXT,
    obs_gerais TEXT
);
success!
timestamp: 2013-02-27T10:36:17.740235
CREATE TABLE interface(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_hosts INTEGER REFERENCES hosts (id) ON DELETE CASCADE,
    nome CHAR(512),
    ip CHAR(512)
);
success!
timestamp: 2013-02-27T11:49:01.821316
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2013-02-27T11:49:01.987346
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-27T11:49:02.104154
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2013-02-27T11:49:02.239708
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2013-02-27T11:49:02.383383
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-27T11:49:02.530368
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2013-02-27T11:49:02.669996
CREATE TABLE cliente(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512) NOT NULL UNIQUE,
    email VARCHAR(512)
);
timestamp: 2013-02-27T11:52:49.104746
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2013-02-27T11:52:49.250226
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-27T11:52:49.366105
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2013-02-27T11:52:49.458564
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2013-02-27T11:52:49.601085
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-27T11:52:49.733060
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2013-02-27T11:52:49.871682
CREATE TABLE cliente(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512) NOT NULL UNIQUE,
    email VARCHAR(512)
);
success!
timestamp: 2013-02-27T11:52:50.046458
CREATE TABLE servidor(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512) NOT NULL
);
success!
timestamp: 2013-02-27T11:52:50.154726
CREATE TABLE distro(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512) NOT NULL,
    img VARCHAR(512) NOT NULL,
    imagem VARCHAR(512) NOT NULL
);
success!
timestamp: 2013-02-27T11:52:50.306104
CREATE TABLE hosts(
    id SERIAL PRIMARY KEY,
    id_cliente INTEGER REFERENCES cliente (id) ON DELETE CASCADE,
    id_servidor INTEGER REFERENCES servidor (id) ON DELETE CASCADE,
    nome VARCHAR(512) NOT NULL,
    ip_chegada VARCHAR(512) NOT NULL,
    porta_ssh VARCHAR(512) NOT NULL,
    gateway VARCHAR(512) NOT NULL,
    vpn VARCHAR(512),
    servicos TEXT,
    if1 VARCHAR(512),
    ip1 VARCHAR(512),
    masc1 VARCHAR(512),
    obs1 VARCHAR(512),
    if2 VARCHAR(512),
    ip2 VARCHAR(512),
    masc2 VARCHAR(512),
    obs2 VARCHAR(512),
    if3 VARCHAR(512),
    ip3 VARCHAR(512),
    masc3 VARCHAR(512),
    obs3 VARCHAR(512),
    if4 VARCHAR(512),
    ip4 VARCHAR(512),
    masc4 VARCHAR(512),
    obs4 VARCHAR(512),
    rotas TEXT,
    obs_gerais TEXT,
    id_distro INTEGER REFERENCES distro (id) ON DELETE CASCADE
);
success!
timestamp: 2013-02-27T11:52:50.449458
CREATE TABLE interface(
    id SERIAL PRIMARY KEY,
    id_hosts INTEGER REFERENCES hosts (id) ON DELETE CASCADE,
    nome VARCHAR(512),
    ip VARCHAR(512)
);
success!
timestamp: 2013-02-27T12:11:12.124399
ALTER TABLE hosts DROP COLUMN vpn;
timestamp: 2013-02-27T12:18:46.872188
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2013-02-27T12:18:47.045521
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-27T12:18:47.169171
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2013-02-27T12:18:47.278078
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2013-02-27T12:18:47.403262
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2013-02-27T12:18:47.544852
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2013-02-27T12:18:47.684918
CREATE TABLE cliente(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512) NOT NULL UNIQUE,
    email VARCHAR(512)
);
success!
timestamp: 2013-02-27T12:18:47.834604
CREATE TABLE servidor(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512) NOT NULL
);
success!
timestamp: 2013-02-27T12:18:48.001296
CREATE TABLE distro(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512) NOT NULL,
    img VARCHAR(512) NOT NULL,
    imagem VARCHAR(512) NOT NULL
);
success!
timestamp: 2013-02-27T12:18:48.134733
CREATE TABLE hosts(
    id SERIAL PRIMARY KEY,
    id_cliente INTEGER REFERENCES cliente (id) ON DELETE CASCADE,
    id_servidor INTEGER REFERENCES servidor (id) ON DELETE CASCADE,
    id_distro INTEGER REFERENCES distro (id) ON DELETE CASCADE,
    servicos TEXT,
    if1 VARCHAR(512),
    ip1 VARCHAR(512),
    masc1 VARCHAR(512),
    obs1 VARCHAR(512),
    if2 VARCHAR(512),
    ip2 VARCHAR(512),
    masc2 VARCHAR(512),
    obs2 VARCHAR(512),
    if3 VARCHAR(512),
    ip3 VARCHAR(512),
    masc3 VARCHAR(512),
    obs3 VARCHAR(512),
    if4 VARCHAR(512),
    ip4 VARCHAR(512),
    masc4 VARCHAR(512),
    obs4 VARCHAR(512),
    nome VARCHAR(512) NOT NULL,
    ip_chegada VARCHAR(512) NOT NULL,
    porta_ssh VARCHAR(512) NOT NULL,
    gateway VARCHAR(512) NOT NULL,
    rotas TEXT,
    obs_gerais TEXT
);
success!
timestamp: 2013-02-27T12:18:48.277610
CREATE TABLE interface(
    id SERIAL PRIMARY KEY,
    id_hosts INTEGER REFERENCES hosts (id) ON DELETE CASCADE,
    nome VARCHAR(512),
    ip VARCHAR(512)
);
success!
timestamp: 2013-02-27T17:35:19.222010
ALTER TABLE hosts ADD id_servidor__tmp TEXT;
UPDATE hosts SET id_servidor__tmp=id_servidor;
ALTER TABLE hosts DROP COLUMN id_servidor;
ALTER TABLE hosts ADD id_servidor TEXT;
UPDATE hosts SET id_servidor=id_servidor__tmp;
ALTER TABLE hosts DROP COLUMN id_servidor__tmp;
timestamp: 2013-02-27T17:56:47.174234
ALTER TABLE hosts DROP COLUMN id_servidor;
timestamp: 2013-02-27T17:57:00.801355
ALTER TABLE hosts ADD id_servidor INTEGER REFERENCES servidor (id) ON DELETE CASCADE;
timestamp: 2013-03-04T09:19:17.263105
CREATE TABLE auth_user(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2013-03-04T09:19:17.405732
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2013-03-04T09:19:17.546546
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE
);
success!
timestamp: 2013-03-04T09:19:17.630618
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2013-03-04T09:19:17.780343
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2013-03-04T09:19:17.904752
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES auth_user (id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2013-03-04T09:19:18.054286
CREATE TABLE cliente(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512) NOT NULL UNIQUE,
    email VARCHAR(512)
);
success!
timestamp: 2013-03-04T09:19:18.237463
CREATE TABLE servidor(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512) NOT NULL
);
success!
timestamp: 2013-03-04T09:19:18.353838
CREATE TABLE distro(
    id SERIAL PRIMARY KEY,
    nome VARCHAR(512) NOT NULL,
    img VARCHAR(512) NOT NULL,
    imagem VARCHAR(512) NOT NULL
);
success!
timestamp: 2013-03-04T09:19:18.492706
CREATE TABLE hosts(
    id SERIAL PRIMARY KEY,
    id_cliente INTEGER REFERENCES cliente (id) ON DELETE CASCADE,
    id_servidor INTEGER REFERENCES servidor (id) ON DELETE CASCADE,
    id_distro INTEGER REFERENCES distro (id) ON DELETE CASCADE,
    servicos TEXT,
    if1 VARCHAR(512),
    ip1 VARCHAR(512),
    masc1 VARCHAR(512),
    obs1 VARCHAR(512),
    if2 VARCHAR(512),
    ip2 VARCHAR(512),
    masc2 VARCHAR(512),
    obs2 VARCHAR(512),
    if3 VARCHAR(512),
    ip3 VARCHAR(512),
    masc3 VARCHAR(512),
    obs3 VARCHAR(512),
    if4 VARCHAR(512),
    ip4 VARCHAR(512),
    masc4 VARCHAR(512),
    obs4 VARCHAR(512),
    nome VARCHAR(512) NOT NULL,
    ip_chegada VARCHAR(512) NOT NULL,
    porta_ssh VARCHAR(512) NOT NULL,
    gateway VARCHAR(512) NOT NULL,
    rotas TEXT,
    obs_gerais TEXT
);
success!
timestamp: 2013-03-04T09:19:18.655687
CREATE TABLE interface(
    id SERIAL PRIMARY KEY,
    id_hosts INTEGER REFERENCES hosts (id) ON DELETE CASCADE,
    nome VARCHAR(512),
    ip VARCHAR(512)
);
success!
timestamp: 2013-03-05T10:24:22.807972
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512),
    registration_id CHAR(512)
);
